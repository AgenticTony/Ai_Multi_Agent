[tool.poetry]
name = "voicehive-backend"
version = "1.0.0"
description = "VoiceHive AI Voice Agent Backend Service"
authors = ["VoiceHive Team <team@voicehive.com>"]
readme = "README.md"
packages = [
    {include = "voicehive", from = "src"},
    {include = "memory"},
    {include = "monitoring"},
    {include = "tools"}
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
openai = "^1.3.0"
google-cloud-aiplatform = "^1.38.0"
google-cloud-secret-manager = "^2.16.4"
google-cloud-logging = "^3.8.0"
requests = "^2.31.0"
mem0ai = "^0.0.11"
twilio = "^8.10.0"
firebase-admin = "^6.2.0"
psutil = "^5.9.0"
numpy = "^1.24.0"
scipy = "^1.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.25.2"
black = "^23.12.0"
isort = "^5.13.0"
flake8 = "^6.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
hypothesis = "^6.92.0"
pytest-benchmark = "^4.0.0"
pytest-xdist = "^3.5.0"

[tool.poetry.group.test.dependencies]
factory-boy = "^3.3.0"
faker = "^21.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["voicehive", "memory", "monitoring", "tools"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "mem0ai.*",
    "twilio.*",
    "firebase_admin.*",
    "google.cloud.*",
    "psutil.*",
    "numpy.*",
    "scipy.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests"
]

[tool.coverage.run]
source = ["src/voicehive", "memory", "monitoring", "tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.hypothesis]
max_examples = 100
deadline = 5000
